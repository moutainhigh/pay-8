<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.sogou.pay.service.dao.PayTransferDao">

    <resultMap id="payTransferMap" type="com.sogou.pay.service.entity.PayTransfer" autoMapping="true">
        <result column="id" property="id"/>
        <result column="create_time" property="createTime"/>
        <result column="modify_time" property="modifyTime"/>
        <result column="app_id" property="appId"/>
        <result column="batch_no" property="batchNo"/>
        <result column="out_ref" property="outRef"/>
        <result column="pay_status" property="payStatus"/>
        <result column="rec_bankacc" property="recBankAcc"/>
        <result column="rec_name" property="recName"/>
        <result column="pay_amt" property="payAmt"/>
        <result column="fee" property="fee"/>
        <result column="pay_desc" property="payDesc"/>
        <result column="bank_flag" property="bankFlag"/>
        <result column="other_bank" property="otherBank"/>
        <result column="other_city" property="otherCity"/>
        <result column="result_desc" property="resultDesc"/>
        <result column="serial_no" property="serialNo"/>
    </resultMap>

    <sql id="tableColumns">
        id,create_time,modify_time,app_id,batch_no,out_ref,pay_status,
        rec_bankacc,rec_name,pay_amt,fee,pay_desc,bank_flag,other_bank,other_city,
        result_desc,serial_no
    </sql>

    <insert id="insert" parameterType="PayTransfer">
        insert into t_pay_transfer (
            create_time,
            modify_time,
            app_id,
            batch_no,
            out_ref,
            pay_status,
            rec_bankacc,
            rec_name,
            pay_amt,
            fee,
            pay_desc,
            bank_flag,
            other_bank,
            other_city,
            serial_no
        )
        values (
             now(),
             now(),
             #{appId},
             #{batchNo},
             #{outRef},
             1,
             #{recBankAcc},
             #{recName},
             #{payAmt},
             #{fee},
             #{payDesc},
             #{bankFlag},
             #{otherBank},
             #{otherCity},
             #{serialNo}
        )
    </insert>

    <insert id="batchInsert" parameterType="java.util.List">
        INSERT INTO t_pay_transfer (
            create_time,
            modify_time,
            app_id,
            batch_no,
            out_ref,
            pay_status,
            rec_bankacc,
            rec_name,
            pay_amt,
            fee,
            pay_desc,
            bank_flag,
            other_bank,
            other_city,
            serial_no
        )
        VALUES
        <foreach collection="list" item="obj" index="index" separator=",">
            (
            now(),
            now(),
            #{obj.appId},
            #{obj.batchNo},
            #{obj.outRef},
            1,
            #{obj.recBankAcc},
            #{obj.recName},
            #{obj.payAmt},
            #{obj.fee},
            #{obj.payDesc},
            #{obj.bankFlag},
            #{obj.otherBank},
            #{obj.otherCity},
            #{obj.serialNo}
            )
        </foreach>
    </insert>

    <select id="queryByBatchNo" resultMap="payTransferMap">
        SELECT
        <include refid="tableColumns"/>
        FROM t_pay_transfer
        WHERE batch_no = #{batchNo}
    </select>

    <select id="queryByBatchNoAndStatus" resultMap="payTransferMap">
        SELECT
        <include refid="tableColumns"/>
        FROM t_pay_transfer
        WHERE batch_no = #{batchNo} and pay_status=#{payStatus}
    </select>

    <select id="queryBySerialNo" resultMap="payTransferMap">
        SELECT
        <include refid="tableColumns"/>
        FROM t_pay_transfer
        WHERE serial_no = #{serialNo}
    </select>

    <update id="updateStatusById">
        UPDATE t_pay_transfer
        <set>
            <if test="resultDesc != null and resultDesc!='' ">
                result_desc= #{resultDesc},
            </if>
            pay_status= #{payStatus},
            modify_time=now()
        </set>
        WHERE id = #{id}
    </update>

    <update id="updateStatusByBatchNo">
        UPDATE t_pay_transfer
        <set>
            pay_status= #{payStatus},
            modify_time=now()
        </set>
        WHERE app_id = #{appId} and batch_no = #{batchNo}
    </update>

    <update id="updateStatusBySerialNo">
        UPDATE t_pay_transfer
        <set>
            <if test="resultDesc != null and resultDesc!='' ">
                result_desc= #{resultDesc},
            </if>
            pay_status= #{payStatus},
            modify_time=now()
        </set>
        WHERE serial_no = #{serialNo}
    </update>

	<select id="queryByOutRefAndAppId" resultMap="payTransferMap">
		SELECT
        <include refid="tableColumns"/>
        FROM t_pay_transfer
        WHERE app_id = #{appId} and out_ref in
        	  <foreach item="item" index="index" collection="list" 
                    open="(" separator="," close=")">
                   #{item}
            </foreach>
	</select>

    <select id="queryRefund" resultMap="payTransferMap">
        SELECT
        <include refid="tableColumns"/>
        FROM t_pay_transfer
        WHERE pay_status = 5
        and modify_time  &gt;  DATE_FORMAT(concat(#{startTime},' 00:00:00') ,'%Y-%m-%d %H:%i:%S')
        and modify_time &lt;  DATE_FORMAT(concat(#{endTime},' 23:59:59'),'%Y-%m-%d %H:%i:%S')
        <if test="recBankacc != null and recBankacc!='' ">
            and rec_bankacc= #{recBankacc}
        </if>
        <if test="recName != null and recName!='' ">
            and rec_name= #{recName}
        </if>
    </select>

</mapper>