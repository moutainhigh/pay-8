<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sogou.pay.service.dao.PayOrderDao">

    <resultMap id="resultMap" type="com.sogou.pay.service.entity.PayOrderInfo">
        <result column="pay_id" property="payId"/>
        <result column="order_type" property="orderType"/>
        <result column="order_id" property="orderId"/>
        <result column="product_info" property="productInfo"/>
        <result column="order_money" property="orderMoney"/>
        <result column="buy_home_account" property="buyHomeAccount"/>
        <result column="buy_home_ip" property="buyHomeIp"/>
        <result column="sell_home_account" property="sellHomeAccount"/>
        <result column="access_platform" property="accessPlatForm"/>
        <result column="channel_code" property="channelCode"/>
        <result column="pay_order_status" property="payOrderStatus"/>
        <result column="refund_money" property="refundMoney"/>
        <result column="refund_flag" property="refundFlag"/>
        <result column="order_create_time" property="orderCreateTime"/>
        <result column="create_time" property="createTime"/>
        <result column="pay_success_time" property="paySuccessTime"/>
        <result column="app_id" property="appId"/>
        <result column="notify_status" property="notifyStatus"/>
        <result column="app_page_url" property="appPageUrl"/>
        <result column="app_bg_url" property="appBgUrl"/>
    </resultMap>

    <insert id="insertPayOrder" parameterType="PayOrderInfo">
        insert into t_pay_order_info(
            pay_id,
            order_type,
            order_id,
            product_info,
            order_money,
            buy_home_account,
            buy_home_ip,
            sell_home_account,
            access_platform,
            channel_code,
            pay_order_status,
            refund_money,
            refund_flag,
            order_create_time,
            create_time,
            pay_success_time,
            app_id,
            notify_status,
            app_page_url,
            app_bg_url
        )
        values
        (
            #{payId},
            #{orderType},
            #{orderId},
            #{productInfo},
            #{orderMoney},
            #{buyHomeAccount},
            #{buyHomeIp},
            #{sellHomeAccount},
            #{accessPlatForm},
            #{channelCode},
            #{payOrderStatus},
            #{refundMoney},
            #{refundFlag},
            #{orderCreateTime},
            #{createTime},
            #{paySuccessTime},
            #{appId},
            #{notifyStatus},
            #{appPageUrl},
            #{appBgUrl}
        )
    </insert>

    <select id="selectPayOrderById" resultMap="resultMap">
        SELECT pay_id,order_id,app_id,refund_money,pay_order_status,order_money,access_platform,app_bg_url
        FROM t_pay_order_info WHERE pay_id = #{payId}
    </select>

    <update id="updateAddRefundMoney">
        UPDATE t_pay_order_info SET refund_money = refund_money + #{refundAmount}, refund_flag = #{refundFlag} WHERE pay_id=#{payId} AND order_money - refund_money >= #{refundAmount}
    </update>

    <!--<update id="updateBackRefundMoney">
        UPDATE t_pay_order_info SET refund_money = refund_money - #{refundAmount} WHERE pay_id=#{payId} AND refund_money >= #{refundAmount}
    </update>-->

    <update id="updatePayOrder" parameterType="PayOrderInfo">
        UPDATE t_pay_order_info
        <set>
            <if test="payOrderStatus != null">
                pay_order_status = #{payOrderStatus}
            </if>
            <if test="paySuccessTime != null">
                pay_success_time = #{paySuccessTime}
            </if>
            <if test="notifyStatus != null">
                notify_status = #{notifyStatus}
            </if>
        <where>
            <if test="payId != null">
                pay_id = #{payId}
            </if>
        </where>
        </set>
    </update>

    <update id="updatePayOrderByPayId">
        UPDATE t_pay_order_info
        SET channel_code= #{bankCode}, pay_order_status = #{payOrderStatus} , pay_success_time = #{successTime}
        WHERE pay_id = #{payId}
    </update>

    <select id="selectPayOrderByPayIdList" parameterType="java.util.List" resultMap="resultMap">
        SELECT pay_id,order_id,app_page_url,app_id,order_money,pay_success_time FROM t_pay_order_info
        WHERE pay_id IN 
        	  <foreach item="item" index="index" collection="list" 
                       open="(" separator="," close=")">
                      #{item.payId}
              </foreach>
    </select>
    
    <select id="selectPayOrderByOrderId" resultMap="resultMap">
    	SELECT pay_id,order_id,order_money,access_platform,refund_money,refund_flag,pay_order_status 
    	FROM t_pay_order_info
    	WHERE order_id = #{orderId} AND app_id = #{appId}
    </select>
</mapper>